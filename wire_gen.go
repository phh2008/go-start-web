// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"com.phh/start-web/app"
	"com.phh/start-web/auth"
	"com.phh/start-web/dao"
	"com.phh/start-web/pkg/config"
	"com.phh/start-web/pkg/logger"
	"com.phh/start-web/service"
	"com.phh/start-web/util"
	"com.phh/start-web/web/controller"
)

// Injectors from wire.go:

func BuildApp(configFolder config.ConfigFolder) *app.AppContext {
	configConfig := config.NewConfig(configFolder)
	db := util.InitDB(configConfig)
	jwtHelper := util.NewJwtHelper(configConfig)
	casbinHelper := &auth.CasbinHelper{
		Db:      db,
		ConfDir: configFolder,
	}
	userDao := &dao.UserDao{
		Db: db,
	}
	userService := &service.UserService{
		UserDao: userDao,
	}
	userController := &controller.UserController{
		UserService: userService,
		Jwt:         jwtHelper,
	}
	orderDAO := &dao.OrderDAO{
		Db: db,
	}
	orderService := &service.OrderService{
		OrderDao: orderDAO,
	}
	orderController := &controller.OrderController{
		OrderService: orderService,
	}
	authController := &controller.AuthController{
		Casbin: casbinHelper,
	}
	loggerLogger := logger.NewLogger(configConfig)
	appContext := &app.AppContext{
		Config:   configConfig,
		DB:       db,
		Jwt:      jwtHelper,
		Casbin:   casbinHelper,
		UserApi:  userController,
		OrderApi: orderController,
		AuthApi:  authController,
		Logger:   loggerLogger,
	}
	return appContext
}
